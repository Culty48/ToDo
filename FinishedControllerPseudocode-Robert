
(NOTE TO LEO: THIS CLASS (ToDoEntry) IS DIFFERENT FROM THE ACTUAL CODE CUZ I DID IT AWHILE AGO, GOOD LUCK SOLDIER)

class ToDoEntry()   
  name instance variable (string)
  deadline instance variable (array of strings)
  
  Algorithm ToDoEntry(name, deadline)
  pre-conditions: name arg is a string, deadline arg is a string in the format (Month, Day)
  post-conditions: set default values for instance variables, if the date is invalid (does not exist), throw IllegalArgumentException
    Input: two strings
    Output: None
    monthList[] = string list of all the months in a year
    this.name = name
    String[] tempDeadline = deadline.split(" ", 2)
      try
        if tempDeadline length is not equal to 2, then 
          throw new IllegalArgumentException()
        else
          for every element (i) in monthList, do
            if (tempDeadline[0].equals(monthList[i]) && Integer.parseInt(tempDeadline[1]) <= 31 && Integer.parseInt(tempDeadline[1]) > 0), then
              this.deadline = tempDeadline
            else
              throw new IllegalArgumentException()
              
      catch (Exception e)
        System.out.println("Deadline must be in the format (M D)")
        System.out.println("Specified Month may not exist")
        System.out.println("Specified Day may not exist")
      finally
            System.out.println("Please try again")
  
  Algorithm setName (name)
  pre-conditions: name arg is a string
  post-conditions: set new name value as given arg
    Input: two strings
    Output: None
    this.name = name
    
  Algorithm getName ()
  pre-conditions: current name value is a string
  post-conditions: returns current name value
    Input: None
    Output: string
    return name
    
  Algorithm setDeadline (deadline)
  pre-conditions: deadline arg is a string in the format (Month, Day)
  post-conditions: sets current deadline value to given arg, if the date is invalid (does not exist), throw IllegalArgumentException
    Input: string
    Output: None
    monthList[] = string list of all the months in a year
    String[] tempDeadline = deadline.split(" ", 2)
      try
        if tempDeadline length is not equal to 2, then 
          throw new IllegalArgumentException()
        else
          for every element (i) in monthList, do
            if (tempDeadline[0].equals(monthList[i]) && Integer.parseInt(tempDeadline[1]) <= 31 && Integer.parseInt(tempDeadline[1]) > 0), then
              this.deadline = tempDeadline
            else
              throw new IllegalArgumentException()
              
      catch (Exception e)
        System.out.println("Deadline must be in the format (M D)")
        System.out.println("Specified Month may not exist")
        System.out.println("Specified Day may not exist")
      finally
            System.out.println("Please try again")
    
  Algorithm getDeadline()
  pre-conditions: current deadline value is an array of strings
  post-conditions: returns current deadline value
    Input: two strings
    Output: None
    return deadline
    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
